{"version":3,"sources":["../src/worldmap.js"],"names":["_","L","WorldMap","ctrl","mapContainer","createMap","circles","mapCenter","window","latLng","parseFloat","panel","mapCenterLatitude","mapCenterLongitude","map","worldCopyJump","center","scrollWheelZoom","maxZoom","fitWorld","zoomIn","parseInt","initialZoom","panTo","tileServerUrl","attribution","tileServerAttribution","subdomains","tileServerSubdomains","tileLayer","reuseTiles","detectRetina","addTo","control","mousePosition","position","separator","lngFormatter","lng","toFixed","latFormatter","lat","data","filterEmptyData","mapdata","clearTrack","trackLayer","featureGroup","length","addLayer","createTrackLine","pinnedToNow","createLatestCircle","removeLayer","linedata","doc","lon","polyline","color","smoothFactor","opacity","weight","console","log","getBounds","fitBounds","padding","latest","last","circle","circleMarker","fillCOlor","fillOpacity","radius","time","Date","timeDisplay","dashboard","formatDate","html","bindPopup","to","legend","onAdd","_div","DomUtil","create","update","thresholds","legendHtml","colors","index","getColor","innerHTML","locations","sort","dataPoints","isEqual","filter","o","isFinite","circlesLayer","clearLayers","removeCircles","filterEmptyAndZeroValues","needToRedrawCircles","clearCircles","createCircles","updateCircles","forEach","dataPoint","locationName","push","createCircle","addCircles","find","cir","options","location","key","setRadius","calcCircleSize","value","setStyle","fillColor","unbindPopup","createPopup","valueRounded","locationLatitude","locationLongitude","dataPointValue","circleMinSize","circleMaxSize","valueRange","dataFactor","lowestValue","circleSizeRange","unit","unitSingular","unitPlural","label","trim","point","stickyLabels","on","onMouseOver","evt","layer","target","bringToFront","openPopup","onMouseOut","closePopup","first","invalidateSize","mapCenterMoved","removeFrom","layerGroup","zoomFactor","setZoom","removeLegend","remove"],"mappings":"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","file":"worldmap.js","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\nimport _ from 'lodash';\nimport L from './external/leaflet/leaflet';\nimport './external/leaflet/L.Control.MousePosition';\n\nexport default class WorldMap {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n\n    this.circles = [];\n  }\n\n  createMap() {\n    const mapCenter = window.L.latLng(parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude));\n    this.map = window.L.map(this.mapContainer, {\n      worldCopyJump: true,\n      center: mapCenter,\n      scrollWheelZoom: false,\n      maxZoom: 9\n    })\n      .fitWorld()\n      .zoomIn(parseInt(this.ctrl.panel.initialZoom, 10));\n    this.map.panTo(mapCenter);\n\n    const tileServerUrl = this.ctrl.panel.tileServerUrl;\n    const attribution = this.ctrl.panel.tileServerAttribution;\n    const subdomains = this.ctrl.panel.tileServerSubdomains;\n    window.L.tileLayer(tileServerUrl, {\n      maxZoom: 18,\n      reuseTiles: true,\n      detectRetina: true,\n      subdomains: subdomains,\n      attribution: attribution\n    }).addTo(this.map);\n\n    window.L.control.mousePosition({\n      position: \"topright\",\n      separator: \"   \",\n      lngFormatter: function(lng) { return \"Lon: \" + lng.toFixed(5); },\n      latFormatter: function(lat) { return \"Lat: \" + lat.toFixed(5); }\n    }).addTo(this.map);  // add mouse coordinate display\n  }\n\n  drawTrack() {\n    //console.log('drawTrack()');\n    const data = this.filterEmptyData(this.ctrl.mapdata);\n    this.clearTrack();\n    // Keep all track layers in one FeatureGroup\n    this.trackLayer = L.featureGroup([]).addTo(this.map);\n    if (data.length) {\n      this.trackLayer.addLayer(this.createTrackLine(data));\n      if (this.pinnedToNow()) {\n        // Only draw circle if the selected time range extends to 'now'\n        this.trackLayer.addLayer(this.createLatestCircle(data));\n      }\n    }\n  }\n\n  clearTrack() {\n    if (this.trackLayer) this.map.removeLayer(this.trackLayer);\n  }\n\n  createTrackLine(data) {\n    //console.log('createTrackLayer()');\n    const linedata = data.map(doc => [doc.lat, doc.lon]);\n    return L.polyline(linedata, {\n      color: '#3d3d5c',\n      smoothFactor: 3,\n      opacity: 0.75,\n      weight: 3\n    });\n  }\n\n  zoomToTrack() {\n    if (this.trackLayer) {\n      console.log('zooming to ' + this.trackLayer.getBounds());\n      this.map.fitBounds(this.trackLayer.getBounds(), {padding: [50, 50]});\n    }\n  }\n\n  createLatestCircle(data) {\n    const latest = _.last(data);\n    const circle = L.circleMarker([latest.lat, latest.lon], {\n      color: 'red',\n      fillCOlor: '#f03',\n      fillOpacity: 0.5,\n      radius: 8\n    });\n    const time = new Date(latest.time);\n    const timeDisplay = this.ctrl.dashboard.formatDate(time, 'YYYY-MM-DD HH:mm:ss');\n    let html = `<div style='text-align: center'\"><b>${timeDisplay}</b></div>`;\n    html += `<div style='text-align: center'>Recent location [${latest.lat.toFixed(2)}, ${latest.lon.toFixed(2)}]</div>`;\n    circle.bindPopup(html);\n    return circle;\n  }\n\n  pinnedToNow() {\n    // Does the selected time range extend to right now?\n    return this.ctrl.dashboard.time.to === 'now';\n  }\n\n  createLegend() {\n    this.legend = window.L.control({position: 'bottomleft'});\n    this.legend.onAdd = () => {\n      this.legend._div = window.L.DomUtil.create('div', 'info legend');\n      this.legend.update();\n      return this.legend._div;\n    };\n\n    this.legend.update = () => {\n      const thresholds = this.ctrl.data.thresholds;\n      let legendHtml = '';\n      legendHtml += '<i style=\"background:' + this.ctrl.panel.colors[0] + '\"></i> ' +\n          '&lt; ' + thresholds[0] + '<br>';\n      for (let index = 0; index < thresholds.length; index += 1) {\n        legendHtml +=\n          '<i style=\"background:' + this.getColor(thresholds[index] + 1) + '\"></i> ' +\n          thresholds[index] + (thresholds[index + 1] ? '&ndash;' + thresholds[index + 1] + '<br>' : '+');\n      }\n      this.legend._div.innerHTML = legendHtml;\n    };\n    this.legend.addTo(this.map);\n  }\n\n  needToRedrawCircles(data) {\n    if (this.circles.length === 0 && data.length > 0) return true;\n\n    if (this.circles.length !== data.length) return true;\n    const locations = _.map(_.map(this.circles, 'options'), 'location').sort();\n    const dataPoints = _.map(data, 'key').sort();\n    return !_.isEqual(locations, dataPoints);\n  }\n\n  filterEmptyData(data) {\n    return _.filter(data, (o) => _.isFinite(o.lat) && _.isFinite(o.lat));\n  }\n\n  clearCircles() {\n    if (this.circlesLayer) {\n      this.circlesLayer.clearLayers();\n      this.removeCircles(this.circlesLayer);\n      this.circles = [];\n    }\n  }\n\n  drawCircles() {\n    const data = this.filterEmptyAndZeroValues(this.ctrl.data);\n    if (this.needToRedrawCircles(data)) {\n      this.clearCircles();\n      this.createCircles(data);\n    } else {\n      this.updateCircles(data);\n    }\n  }\n\n  createCircles(data) {\n    const circles = [];\n    data.forEach((dataPoint) => {\n      if (!dataPoint.locationName) return;\n      circles.push(this.createCircle(dataPoint));\n    });\n    this.circlesLayer = this.addCircles(circles);\n    this.circles = circles;\n  }\n\n  updateCircles(data) {\n    data.forEach((dataPoint) => {\n      if (!dataPoint.locationName) return;\n\n      const circle = _.find(this.circles, (cir) => { return cir.options.location === dataPoint.key; });\n\n      if (circle) {\n        circle.setRadius(this.calcCircleSize(dataPoint.value || 0));\n        circle.setStyle({\n          color: this.getColor(dataPoint.value),\n          fillColor: this.getColor(dataPoint.value),\n          fillOpacity: 0.5,\n          location: dataPoint.key,\n        });\n        circle.unbindPopup();\n        this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n      }\n    });\n  }\n\n  createCircle(dataPoint) {\n    const circle = window.L.circleMarker([dataPoint.locationLatitude, dataPoint.locationLongitude], {\n      radius: this.calcCircleSize(dataPoint.value || 0),\n      color: this.getColor(dataPoint.value),\n      fillColor: this.getColor(dataPoint.value),\n      fillOpacity: 0.5,\n      location: dataPoint.key\n    });\n\n    this.createPopup(circle, dataPoint.locationName, dataPoint.valueRounded);\n    return circle;\n  }\n\n  calcCircleSize(dataPointValue) {\n    const circleMinSize = parseInt(this.ctrl.panel.circleMinSize, 10) || 2;\n    const circleMaxSize = parseInt(this.ctrl.panel.circleMaxSize, 10) || 30;\n\n    if (this.ctrl.data.valueRange === 0) {\n      return circleMaxSize;\n    }\n\n    const dataFactor = (dataPointValue - this.ctrl.data.lowestValue) / this.ctrl.data.valueRange;\n    const circleSizeRange = circleMaxSize - circleMinSize;\n\n    return (circleSizeRange * dataFactor) + circleMinSize;\n  }\n\n  createPopup(circle, locationName, value) {\n    const unit = value && value === 1 ? this.ctrl.panel.unitSingular : this.ctrl.panel.unitPlural;\n    const label = (locationName + ': ' + value + ' ' + (unit || '')).trim();\n    circle.bindPopup(label, {'offset': window.L.point(0, -2), 'className': 'worldmap-popup', 'closeButton': this.ctrl.panel.stickyLabels});\n\n    circle.on('mouseover', function onMouseOver(evt) {\n      const layer = evt.target;\n      layer.bringToFront();\n      this.openPopup();\n    });\n\n    if (!this.ctrl.panel.stickyLabels) {\n      circle.on('mouseout', function onMouseOut() {\n        circle.closePopup();\n      });\n    }\n  }\n\n  getColor(value) {\n    for (let index = this.ctrl.data.thresholds.length; index > 0; index -= 1) {\n      if (value >= this.ctrl.data.thresholds[index - 1]) {\n        return this.ctrl.panel.colors[index];\n      }\n    }\n    return _.first(this.ctrl.panel.colors);\n  }\n\n  resize() {\n    this.map.invalidateSize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLatitude), parseFloat(this.ctrl.panel.mapCenterLongitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  removeLegend() {\n    this.legend.removeFrom(this.map);\n    this.legend = null;\n  }\n\n  addCircles(circles) {\n    return window.L.layerGroup(circles).addTo(this.map);\n  }\n\n  removeCircles() {\n    this.map.removeLayer(this.circlesLayer);\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n  remove() {\n    this.circles = [];\n    if (this.circlesLayer) this.removeCircles();\n    if (this.legend) this.removeLegend();\n    this.map.remove();\n  }\n}\n"]}