{"version":3,"sources":["../src/ctrl.js"],"names":["MetricsPanelCtrl","_","$","TimeSeries","mapRenderer","panelDefaults","mapCenterLatitude","mapCenterLongitude","initialZoom","tileServer","CruiseTrackPanelCtrl","$scope","$injector","defaults","panel","series","mapdata","events","on","onDataReceived","bind","onDataError","err","dataList","map","seriesHandler","lats","lons","forEach","s","alias","datapoints","length","lat","i","push","lon","date","render","seriesData","serie","target","scope","elem","attrs","ctrl","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,sB,kBAAAA,gB;;AACDC,O;;AACAC,O;;AACAC,gB;;AACAC,iB;;;;;;;;;;;;;;;;;;;;;AAEDC,mB,GAAgB;AACpBC,2BAAmB,CADC;AAEpBC,4BAAoB,CAFA;AAGpBC,qBAAa,CAHO;AAIpBC,oBAAY;AAJQ,O;;sCAOTC,oB;;;AACX,sCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,kJACvBD,MADuB,EACfC,SADe;;AAE7BX,YAAEY,QAAF,CAAW,MAAKC,KAAhB,EAAuBT,aAAvB;AACA,gBAAKU,MAAL,GAAc,EAAd;AACA,gBAAKC,OAAL,GAAe,EAAf;AACA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKG,WAAL,CAAiBD,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKC,cAAL,CAAoBC,IAApB,OAArC;AAP6B;AAQ9B;;;;sCAEWE,G,EAAK;AACf,iBAAKH,cAAL,CAAoB,EAApB;AACD;;;yCAEcI,Q,EAAU;AACvB;AACA,iBAAKR,MAAL,GAAcQ,SAASC,GAAT,CAAa,KAAKC,aAAL,CAAmBL,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACA,gBAAIM,OAAO,EAAX;AAAA,gBAAeC,OAAO,EAAtB;AAAA,gBAA0BX,UAAU,EAApC;AACA,iBAAKD,MAAL,CAAYa,OAAZ,CAAoB,aAAK;AACvB,kBAAIC,EAAEC,KAAF,KAAY,KAAZ,IAAqBD,EAAEC,KAAF,KAAY,UAArC,EAAiD;AAC/CJ,uBAAOG,EAAEE,UAAT;AACD,eAFD,MAEO,IAAIF,EAAEC,KAAF,KAAY,KAAZ,IAAqBD,EAAEC,KAAF,KAAY,WAArC,EAAkD;AACvDH,uBAAOE,EAAEE,UAAT;AACD;AACF,aAND;AAOA,gBAAIL,KAAKM,MAAL,IAAeN,KAAKM,MAAL,KAAgBL,KAAKK,MAAxC,EAAgD;AAC9CN,mBAAKE,OAAL,CAAa,UAACK,GAAD,EAAMC,CAAN,EAAY;AACvBlB,wBAAQmB,IAAR,CAAa;AACXF,uBAAKA,IAAI,CAAJ,CADM;AAEXG,uBAAKT,KAAKO,CAAL,EAAQ,CAAR,CAFM;AAGXG,wBAAMJ,IAAI,CAAJ;AAHK,iBAAb;AAKD,eAND;AAOA,mBAAKjB,OAAL,GAAeA,OAAf;AACD;AACD,iBAAKsB,MAAL;AACD;;;wCAEaC,U,EAAY;AACxB,gBAAMC,QAAQ,IAAIrC,UAAJ,CAAe;AAC3B4B,0BAAYQ,WAAWR,UADI;AAE3BD,qBAAOS,WAAWE;AAFS,aAAf,CAAd;AAIA,mBAAOD,KAAP;AACD;;;+BAGIE,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7BzC,wBAAYsC,KAAZ,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,IAAhC;AACD;;;;QAlDuC7C,gB;;;;AAqD1CU,2BAAqBoC,WAArB,GAAmC,eAAnC","file":"ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport TimeSeries from 'app/core/time_series2';\nimport mapRenderer from './map_renderer';\n\nconst panelDefaults = {\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  tileServer: 'CartoDB Positron',\n};\n\nexport class CruiseTrackPanelCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.series = [];\n    this.mapdata = [];\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n  }\n\n  onDataError(err) {\n    this.onDataReceived([]);\n  }\n\n  onDataReceived(dataList) {\n    //console.log('map onDataReceived()');\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    let lats = [], lons = [], mapdata = [];\n    this.series.forEach(s => {\n      if (s.alias === 'lat' || s.alias === 'latitude') {\n        lats = s.datapoints;\n      } else if (s.alias === 'lon' || s.alias === 'longitude') {\n        lons = s.datapoints;\n      }\n    });\n    if (lats.length && lats.length === lons.length) {\n      lats.forEach((lat, i) => {\n        mapdata.push({\n          lat: lat[0],\n          lon: lons[i][0],\n          date: lat[1]\n        });\n      });\n      this.mapdata = mapdata;\n    }\n    this.render();\n  }\n\n  seriesHandler(seriesData) {\n    const serie = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n    return serie;\n  }\n\n  /* eslint class-methods-use-this: 0 */\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nCruiseTrackPanelCtrl.templateUrl = 'template.html';\n"]}